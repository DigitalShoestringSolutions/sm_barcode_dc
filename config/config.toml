[input.scanner]
serial="0581_0115"
connection_point=["*"]

[[variable]]
    name="location"
    type="static"
    value="Cutting"

[[variable]]
    name="type"
    type="retain"
    pattern="type_(.*)" # optional
    initial="not_set"

[[variable]]
    name="id"
    type="single"
    pattern="job_(.*)"

[[variable]]
    name="raw_mode"
    type="retain"
    pattern="dir_(.*)"
    initial="receive"

[processing]
    directory="functions"
   #process.<process_name>=<function>
    process.enum_mode={apply_to="raw_mode",module="mode_enumeration",output_as=["mode"],extra_args=[]}

[[output]]
    name = "scan event"   # only used in logging
    topic = "{{location}}/feeds/jobs"
    triggers = ["id"]
    trigger_policy="all"
    #payload.<key>="<variable>"
    payload.job_id="id"
    payload.job_type="type"
    payload.location="location"
    payload.timestamp="timestamp"


[[output]]
    name = "mode change event"   # only used in logging
    topic = "{{location}}/control/mode_change"
    triggers = ["mode"]
    payload.mode_changed_to="mode"

[service_layer.mqtt]
    broker="mqtt.docker.local"
    port=8883
    base_topic_template = ""

    #reconnection characteristics
    # start: timeout = initial,
    # if timeout < limit then
    #   timeout = timeout*backoff
    # else
    #   timeout = limit
    reconnect.initial = 5 # seconds
    reconnect.backoff = 2 # multiplier
    reconnect.limit = 60 # seconds
